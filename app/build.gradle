plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.capstone.vieweeapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.capstone.vieweeapp"
        minSdk 27
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        configurations.all {
            resolutionStrategy {
                force("androidx.emoji2:emoji2-views-helper:1.3.0")
                force("androidx.emoji2:emoji2:1.3.0")
            }
        }

//        buildConfigField "String", "GPT_API_KEY", properties['gpt_api_key']
        buildConfigField "String", "CLOVA_SENTIMENT_API_KEY_ID", properties['x_ncp_apigw_api_key_id']
        buildConfigField "String", "CLOVA_SENTIMENT_API_KEY", properties['x_ncp_apigw_api_key']

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your app.
            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }

//        externalNativeBuild{
//            cmake {
//                // Filter based on your device architecture
//                abiFilters 'armeabi-v7a'
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'

        // Composable Reports (restartable, skippable 확인 가능)
//        freeCompilerArgs += [
//                "-P",
//                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=${rootProject.file(".").absolutePath}/report/compose-reports"
//        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
//            jniLibs.srcDir("src/main/jniLibs")

//            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation project(path: ':opencv')

    // Log
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Material3
    implementation("androidx.compose.material3:material3:1.0.1")
    implementation("androidx.compose.material3:material3-window-size-class:1.0.1")

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.4.2'
    implementation 'com.google.android.material:material:1.5.0'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui-graphics'
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // accompanist (지원 중단?)
    implementation "com.google.accompanist:accompanist-navigation-animation:0.31.2-alpha"

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.navigation:navigation-compose:2.6.0-beta01"
    implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    // 이제는 위 라이브러리 없이도 @HiltViewModel만 사용한다면 문제X
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0-alpha01'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Glide
//    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"
    // Coil
    implementation "io.coil-kt:coil-compose:2.3.0"

    // CameraX
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    // When use CameraProvider
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

    // Icons Extend
    implementation "androidx.compose.material:material-icons-extended:1.5.1"

    // Tensorflow
    implementation ('org.tensorflow:tensorflow-lite:2.5.0')
    implementation ('org.tensorflow:tensorflow-lite-gpu:2.5.0')

    // Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:$room_version")
    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")
    kapt 'org.xerial:sqlite-jdbc:3.36.0'


}